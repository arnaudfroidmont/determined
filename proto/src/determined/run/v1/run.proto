syntax = "proto3";

package determined.run.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/runv1";

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "determined/common/v1/common.proto";
import "google/protobuf/wrappers.proto";
import "determined/trial/v1/trial.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Flat run respresentation.
message FlatRun {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "id",
        "start_time",
        "state",
        "tags",
        "checkpoint_size",
        "checkpoint_count",
        "is_exp_multitrial"
      ]
    }
  };
  // The id of the run.
  int32 id = 1;
  // The time the run was started.
  google.protobuf.Timestamp start_time = 2;
  // The time the run ended.
  google.protobuf.Timestamp end_time = 3;
  // The current state of the run(trial).
  determined.trial.v1.State state = 4;
  // The tags of the associated experiment.
  // TODO(aaron.amanuel): Create add/remove tags for runs.
  repeated string labels = 5;
  // The total size of checkpoints.
  int64 checkpoint_size = 6;
  // The count of checkpoints.
  int32 checkpoint_count = 7;
  // The type of searcher for the experiment.
  optional string searcher_type = 8;
  // The searcher metric name for the experiment.
  optional string searcher_metric = 9;
  // Signed searcher metrics value.
  double searcher_metric_value = 10;
  // The id of external run
  optional int32 external_run_id = 11;
  // Trial hyperparameters.
  string hyperparameters = 12;
  // summary metrics.
  optional google.protobuf.Struct summary_metrics = 13;
  // The id of the experiment linked to the run.
  optional int32 experiment_id = 14;
  // The id of the user who created the run.
  optional int32 owner_id = 15;
  // Original id of a forked or continued experiment.
  optional google.protobuf.Int32Value forked_from = 16;
  // The id of external experiment
  optional string external_experiment_id = 17;
  // The resource pool the experiment was created in.
  optional string resource_pool = 18;
  // The current progress of a running experiment.
  optional float experiment_progress = 19;
  // The description of the experiment.
  optional string experiment_description = 20;
  // The experiment name.
  optional string experiment_name = 21;
  // The display name of the user that created the experiment.
  optional string display_name = 22;
  // Time in seconds which experiment ran or has been running.
  optional int32 duration = 23;
  // The id of the project associated with this experiment.
  optional int32 project_id = 24;
  // The name of the project associated with this experiment.
  optional string project_name = 25;
  // The id of the workspace associated with this experiment.
  optional int32 workspace_id = 26;
  // The name of the workspace associated with this experiment.
  optional string workspace_name = 27;
  // The archived status of the parent project (can be inherited from
  // workspace).
  optional bool parent_archived = 28;
  // Unmanaged experiments are detached.
  optional bool unmanaged = 29;
  // True if the associated experiment is a multitrial experiment
  bool is_exp_multitrial = 30;
}
